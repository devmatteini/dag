name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "assets/**"
  pull_request:
    paths-ignore:
      - "**.md"
      - "assets/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  format-check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: "rustfmt"
      - name: Format check
        run: make format-check

  # NOTE: always set shell: bash, otherwise on Windows there might be problems!
  build:
    name: ${{ matrix.job.os }}
    needs: [ format-check ]
    runs-on: ${{ matrix.job.runner }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - os: linux
            runner: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            use-cross: false
          - os: linux-musl
            runner: ubuntu-22.04
            target: x86_64-unknown-linux-musl
            use-cross: true
          - os: linux-armv6
            runner: ubuntu-22.04
            target: arm-unknown-linux-gnueabihf
            use-cross: true
          - os: linux-arm64
            runner: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            use-cross: true
          - os: macos
            runner: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
          - os: windows
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            use-cross: false
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.job.target }}"
          components: "clippy"

      - uses: Swatinem/rust-cache@v2
        if: ${{ github.event_name != 'pull_request' }}

      - name: Install cross
        uses: taiki-e/install-action@v2
        if: matrix.job.use-cross == true
        with:
          tool: cross

      - name: Setup build tools
        if: matrix.job.use-cross == true
        shell: bash
        run: |
          echo "CARGO_BIN=cross" >>$GITHUB_ENV
          echo "CARGO_TARGET=${{ matrix.job.target }}" >>$GITHUB_ENV

      - name: Build
        shell: bash
        run: make build

      - name: Lint
        shell: bash
        run: make lint

      - name: Tests
        shell: bash
        run: make test

      - name: Integration tests
        if: matrix.job.use-cross == false
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make integration-tests

      - name: Debian integration tests
        if: matrix.job.os == 'linux'
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make debian-tests
